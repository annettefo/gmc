
[splunk_sh_fields_csv_lookup_report]
dispatchAs = user
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
search = | inputlookup splunk_fields_lookup \
| table Index Component Sub_Component Field_Name Field_Display_Name Field_Description \
| sort Index Component Sub_Component Field_Name \
| rex field=Field_Description mode=sed "s/\s{2,}/ /g"\
| eval Field_Description=trim(Field_Description)\
| outputlookup splunk_fields_lookup

[splunk_sh_rest_data_models_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 45 0 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/models splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as *, field.* as * , splunk_server AS Splunk_Instance , acceleration.* AS * \
| eval author = if(author="nobody", "system", author) \
| fields Splunk_Instance disabled title app author acceleration allow_old_summaries allow_skew cron_schedule earliest_time manual_rebuilds max_concurrent max_time poll_buckets_until_maxtime schedule_priority sharing tags_whitelist updated \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles disabled title app author acceleration allow_old_summaries allow_skew cron_schedule earliest_time manual_rebuilds max_concurrent max_time poll_buckets_until_maxtime \
| outputlookup splunk_sh_rest_data_models_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_props_calcfields_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 0 1 * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/props/calcfields splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as *, field.* as * , splunk_server AS Splunk_Instance \
| fields Splunk_Roles Splunk_Instance app sharing stanza name value author updated \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app stanza name \
| table Splunk_Instance Splunk_Roles app sharing stanza name value author updated \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| outputlookup splunk_sh_rest_data_props_calcfields_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_props_extractions_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 15 1 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/props/extractions splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as * , splunk_server AS Splunk_Instance \
| fields Splunk_Roles Splunk_Instance app sharing stanza attribute value author type updated \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app stanza attribute \
| table Splunk_Instance Splunk_Roles app sharing stanza attribute value author type updated \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| outputlookup splunk_sh_rest_data_props_extractions_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_props_fieldaliases_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 30 1 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/props/fieldaliases splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as *, field.* as * , splunk_server AS Splunk_Instance \
| fields Splunk_Instance title app author attribute sharing stanza updated value \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app stanza attribute \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles app author stanza attribute value sharing updated \
| outputlookup splunk_sh_rest_data_props_fieldaliases_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_props_lookups_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 45 1 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/props/lookups splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as * , splunk_server AS Splunk_Instance\
| fields Splunk_Roles Splunk_Instance app sharing stanza attribute transform overwrite value author updated \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app stanza attribute \
| table Splunk_Instance Splunk_Roles app sharing stanza attribute transform overwrite value author updated \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| outputlookup splunk_sh_rest_data_props_lookups_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_transforms_extractions_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 0 2 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/transforms/extractions splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as *, field.* as * , splunk_server AS Splunk_Instance \
| fields Splunk_Instance title disabled Type app author FORMAT REGEX DELIMS CLEAN_KEYS DEST_KEY FIELDS MV_ADD REPEAT_MATCH SOURCE_KEY WRITE_META sharing updated \
| eval Type = case ( isnotnull(DELIMS), "delimiter-based", isnotnull(REGEX), "regex-based", true(), Type) \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| fields Splunk_Instance Splunk_Roles title disabled Type app author FORMAT REGEX DELIMS CLEAN_KEYS DEST_KEY FIELDS MV_ADD REPEAT_MATCH SOURCE_KEY WRITE_META sharing updated \
| outputlookup splunk_sh_rest_data_transforms_extractions_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_ui_dashboards_kv_store_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 15 2 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/ui/views splunk_server_group=dmc_group_search_head timeout=0 search="isDashboard=1" search="isVisible=1" search="disabled=0" search="eai:acl.app!=system" \
| search NOT title IN ("about", "home" , "search" , "dashboard*", "alert*" , "check_alerts", "report*" , "field_extractor" , "job_manager" , "dataset*" , "pivot" , "show_source" , "charting" , "data_model*" , "flashtimeline" , "integrity_check_of_installed_files" , "licenseusage" , "live_tail" , "mod_setup" , "orphaned_scheduled_searches", "setup", "sample_*") \
| rename eai:* as * \
| rename acl.* as * , splunk_server AS Splunk_Instance\
| fields Splunk_Instance app sharing title label description type author removable updated data id \
| eval dashboard_size = len(data) \
| rex field=id mode=sed "s/^https:\/\/127.0.0.1:8089\/servicesNS\///g" \
| rex field=id mode=sed "s/^nobody/apps/g" \
| eval location=if(match(id, "^apps"), id, "users/" . id) \
| rex field=data max_match=0 "<search ref=\"(?<Report_Reference>\w+)\"></search>" \
| rex field=data max_match=0 "href=\"(?<Dashboard_Reference>\w+)\">" \
| rex field=data max_match=0 "\|\s*lookup\s*(?<Lookup_Reference1>\w+)" \
| rex field=data max_match=0 "\|\s*inputlookup\s*(?<Lookup_Reference2>\w+)" \
| eval Lookup_Reference=mvsort(mvdedup(mvappend(Lookup_Reference1, Lookup_Reference2))) \
| rex field=data max_match=0 "<query>(?<query>\p{Any}+?)<\/query>" \
| rex field=data max_match=0 "<param name=\"search\">(?<param>\p{Any}+?)<\/param>" \
| rex field=data max_match=0 "<searchString>(?<searchString>\p{Any}+?)<\/searchString>" \
| rex field=data max_match=0 "[<]search\s(base|id)=\"(?<base1>\w+)" \
| rex field=data max_match=0 "[<]search\sdepends=.*id=\"(?<base2>\w+)" \
| eval base=mvsort(mvdedup(mvappend(base1, base2))) \
| eval BaseSearch = IF(isnull(base), "NONE", base) \
| eval Search=trim(mvsort(mvdedup(mvappend(query, param, searchString)))) \
| rex field=Search mode=sed "s/\s{2,}/ /g" \
| rex field=Search mode=sed "s/\&lt;=/<=/g" \
| rex field=Search mode=sed "s/\&gt;=/>=/g" \
| rex field=Search mode=sed "s/\&lt;/</g" \
| rex field=Search mode=sed "s/\&gt;/>/g" \
| rex field=Search mode=sed "s/^\s*<!\[CDATA\[\s*|\s*\]\]>$//g" \
| eval Search =if ( match(Search, "^\s+$") OR Search="", null(), Search ) \
| rex field=Search mode=sed "s/^\s*[\r\n]+//g" \
| rex field=Search max_match=0 "[fF][rR][oO][mM]\s*[dD][aA][tT][aA][mM][oO][dD][eE][lL]\s*=\s*\"?(?<Datamodel_Reference>.*?)\"?\s" \
| eval Datamodel_Reference=mvdedup(Datamodel_Reference) \
| eval author = if(author="nobody", "system", author) \
| fields Splunk_Instance app sharing title label description type dashboard_size author location removable updated Report_Reference Dashboard_Reference Lookup_Reference Datamodel_Reference Search BaseSearch \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles values(Report_Reference) as Report_Reference values(Dashboard_Reference) as Dashboard_Reference values(Lookup_Reference) as Lookup_Reference values(Datamodel_Reference) as Datamodel_Reference values(Search) as Search values(BaseSearch) as BaseSearch last(*) as * by Splunk_Instance app title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|")\
| table Splunk_Instance Splunk_Roles app sharing title label description type dashboard_size author location removable updated data Report_Reference Dashboard_Reference Lookup_Reference Datamodel_Reference Search BaseSearch \
| outputlookup splunk_sh_rest_data_ui_dashboards_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_saved_searches_kv_store_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 30 2 * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/saved/searches splunk_server_group=dmc_group_search_head timeout=0 earliest_time=-24h@h latest_time=now \
| eval savedsearch_type=if((NOT 'action'=="*" AND NOT alert.track=="*" AND NOT alert_condition=="*" AND 'alert_type'=="always"),"report","alert") \
| rename eai:acl.app AS app, splunk_server AS Splunk_Instance, title AS savedsearch_name, alert.severity AS alert_severity, alert.track AS alert_track, dispatch.earliest_time AS dispatch_earliest_time, dispatch.latest_time AS dispatch_latest_time , eai:acl.sharing as sharing , eai:acl.owner as owner , eai:acl.removable as removable \
| rex field=search max_match=0 "lookup\s(?<Lookup_Reference>\w+)" \
| eval Lookup_Reference=mvsort(mvdedup(Lookup_Reference)) \
| rex field=search max_match=0 "[fF][rR][oO][mM]\s*[dD][aA][tT][aA][mM][oO][dD][eE][lL]\s*=\s*\"?(?<Datamodel_Reference>.*?)\"?\s" \
| eval Datamodel_Reference=mvdedup(Datamodel_Reference) \
| fields savedsearch_name savedsearch_type author updated app description cron_schedule schedule_window realtime_schedule schedule_priority allow_skew alert_severity alert_track alert_type dispatch_earliest_time dispatch_latest_time auto_summarize max_concurrent next_scheduled_time search scheduled_times disabled is_scheduled is_visible owner removable run_n_times run_on_startup Splunk_Instance sharing Lookup_Reference Datamodel_Reference \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| eval updated=strftime(strptime(updated, "%Y-%m-%dT%H:%M:%S%z"),"%m/%d/%Y %H:%M:%S") \
| eval next_scheduled_time=strftime(strptime(next_scheduled_time, "%Y-%m-%d %H:%M:%S %Z"),"%m/%d/%Y %H:%M:%S") \
| eval scheduled_times=strftime(scheduled_times,"%m/%d/%Y %H:%M:%S") \
| stats values(Splunk_Roles) as Splunk_Roles values(scheduled_times) as scheduled_times values(Lookup_Reference) as Lookup_Reference values(Datamodel_Reference) as Datamodel_Reference last(*) AS * dc(scheduled_times) as dc_scheduled_times BY Splunk_Instance app savedsearch_name \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles app savedsearch_name description savedsearch_type sharing author owner updated disabled is_visible is_scheduled cron_schedule scheduled_times next_scheduled_time dc_scheduled_times auto_summarize dispatch_earliest_time dispatch_latest_time schedule_priority max_concurrent schedule_window allow_skew realtime_schedule alert_severity alert_track alert_type removable run_n_times run_on_startup Lookup_Reference Datamodel_Reference search \
| outputlookup splunk_sh_saved_searches_rest_kv_store_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_index_audit_user_login_kv_store_lookup_tracker]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 1-56/5 * * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = index=_audit sourcetype=audittrail user=* "action=login attempt" info=succeeded earliest=-10m@m latest=-5m@m \
| eval Splunk_Instance = trim(upper(host)) , Login_Source = upper(src) , locator=md5(lower(user)) \
| `get_instance_info_simple(Splunk_Instance)`\
| fields _time locator user Login_Source Splunk_Instance Splunk_Roles \
| lookup splunk_sh_index_audit_user_login_kv_store_lookup User AS user OUTPUT Splunk_Roles AS Splunk_Roles_KV Splunk_Instance AS Splunk_Instance_KV Login_Source AS Login_Source_KV \
| stats \
    earliest(_time) as Earliest_Login_Updated \
    latest(_time) as Latest_Login_Updated \
    values(Splunk_Roles) as Splunk_Roles \
    values(Splunk_Instance) as Splunk_Instance \
    values(Login_Source) as Login_Source \
    values(Splunk_Roles_KV) as Splunk_Roles_KV \
    values(Splunk_Instance_KV) as Splunk_Instance_KV \
    values(Login_Source_KV) as Login_Source_KV \
    latest(user) as User \
    BY locator \
| eval Splunk_Roles = mvsort(mvdedup(mvappend(Splunk_Roles, Splunk_Roles_KV))) , Login_Source = mvsort(mvdedup(mvappend(Login_Source, Login_Source_KV))) , Splunk_Instance = mvsort(mvdedup(mvappend(Splunk_Instance, Splunk_Instance_KV))) \
| table locator User Earliest_Login_Updated Latest_Login_Updated Login_Source Splunk_Roles Splunk_Instance \
| outputlookup splunk_sh_index_audit_user_login_kv_store_lookup key_field=locator createinapp=true \
| stats count

[splunk_sh_index_internal_scheduler_jobs_kv_store_lookup_tracker]
alert.track = 0
allow_skew = 100%
cron_schedule = 3-58/5 * * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = index=_internal sourcetype=scheduler search_group=dmc_group_search_head status=completed search_type!=datamodel_acceleration app!=splunk_archiver earliest=-10m@m latest=-5m@m \
| fields _time host savedsearch_name app user scheduled_time priority dispatch_time window_time run_time result_count search_group \
| rename host as Splunk_Instance , savedsearch_name as Savedsearch_Name , app as App , user as User , scheduled_time as Scheduled_Time , priority as Priority, dispatch_time as Dispatch_Time, window_time as Window_Time , run_time as Run_Time, result_count as Result_Count \
| eval User = upper(User) \
| `get_instance_info_simple(Splunk_Instance)`\
| fields - search_group \
| eval locator=md5(Splunk_Instance + Savedsearch_Name) \
| stats latest(_time) as Latest_Run_Time values(Splunk_Instance) AS Splunk_Instance values(Splunk_Roles) AS Splunk_Roles latest(*) AS * \
    BY locator \
| table locator Splunk_Instance Splunk_Roles Savedsearch_Name App User Scheduled_Time Priority Dispatch_Time Window_Time Latest_Run_Time Run_Time Result_Count \
| outputlookup splunk_sh_index_internal_scheduler_jobs_kv_store_lookup key_field=locator createinapp=true \
| stats count

[splunk_sh_web_access_kv_store_lookup_tracker]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 2-57/5 * * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = index=_internal sourcetype=splunk_web_access method=GET status=200\
    NOT view IN ("home" , "search" , "dashboard*", "alert*" , "check_alerts", "report*" , "field_extractor" , "job_manager" , "dataset*" , "pivot" , "show_source" , "charting" , "data_model*" , "flashtimeline" , "integrity_check_of_installed_files" , "licenseusage" , "live_tail" , "mod_setup" , "orphaned_scheduled_searches") \
    user!="-" earliest=-10m@m latest=-5m@m \
| fields _time host search_group app view user spent \
| eval User = upper(trim(user)) , Splunk_Instance = trim(upper(host)) \
| `get_instance_info_simple(Splunk_Instance)`\
| eval locator=md5(Splunk_Instance + view) \
| stats \
    earliest(_time) as Earliest_Access_Updated\
    latest(_time) as Latest_Access_Updated\
    values(User) as User\
    values(Splunk_Instance) as Splunk_Instance\
    values(Splunk_Roles) as Splunk_Roles \
    values(app) as App \
    values(view) as Dashboard_Name \
    min(spent) as min_spent\
    max(spent) as max_spent\
    avg(spent) as avg_spent\
    by locator \
| eval avg_spent = round(avg_spent) \
| table locator Splunk_Instance Splunk_Roles App Dashboard_Name User Earliest_Access_Updated Latest_Access_Updated min_spent max_spent avg_spent \
| outputlookup splunk_sh_web_access_kv_store_lookup key_field=locator createinapp=true \
| stats count

[splunk_sh_rest_data_macros_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
enableSched = 1
cron_schedule = 45 2 * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/data/macros splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as * , splunk_server AS Splunk_Instance\
| fields Splunk_Instance title definition args app sharing author description\
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * count by Splunk_Instance app title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles title definition args app sharing author description\
| outputlookup splunk_sh_rest_data_macros_csv_lookup createinapp=true create_empty=true override_if_empty=false\
| stats count

[splunk_sh_admin_search_concurrency_settings_handler_csv_lookup_gen]
description = 
action.email.useNSSubject = 1
alert.track = 0
allow_skew = 100%
enableSched = 1
cron_schedule = 0 3 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","app","app_name","bytes"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
search = | rest /servicesNS/-/-/admin/search-concurrency-settings-handler splunk_server_group="dmc_group_search_head" timeout=0 \
| rename splunk_server AS Splunk_Instance \
| fields Splunk_Instance title auto_summary_perc base_max_searches max_rt_search_multiplier max_searches_per_cpu max_searches_perc \
| join Splunk_Instance \
    [| rest /servicesNS/-/-/admin/server-status-limits-concurrency splunk_server_group="dmc_group_search_head" timeout=0 \
    | fields splunk_server max_auto_summary_searches max_hist_scheduled_searches max_hist_searches max_rt_scheduled_searches max_rt_searches \
    | rename splunk_server AS Splunk_Instance ] \
| `get_instance_info_simple(Splunk_Instance)` \
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * by Splunk_Instance title \
| table Splunk_Instance Splunk_Roles title auto_summary_perc base_max_searches max_rt_search_multiplier max_searches_per_cpu max_searches_perc max_auto_summary_searches max_hist_scheduled_searches max_hist_searches max_rt_scheduled_searches max_rt_searches \
| outputlookup splunk_sh_admin_search_concurrency_settings_handler_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_configs_conf_props_rest_csv_lookup_gen]
description = 
alert.track = 0
allow_skew = 100%
cron_schedule = 45 3 * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
display.events.type = table
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/configs/conf-props splunk_server_group="*" timeout=0 \
| rename eai:* as * , splunk_server AS Splunk_Instance\
| fields Splunk_Instance title appName author description TIME_PREFIX TIME_FORMAT MAX_TIMESTAMP_LOOKAHEAD DATETIME_CONFIG SHOULD_LINEMERGE LINE_BREAKER TRUNCATE BREAK_ONLY_BEFORE BREAK_ONLY_BEFORE_DATE MUST_BREAK_AFTER KV_MODE INDEXED_EXTRACTIONS EVENT_BREAKER_ENABLE EVENT_BREAKER ANNOTATE_PUNCT LEARN_SOURCETYPE LEARN_MODEL MAX_EVENTS maxDist \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)`\
| stats values(Splunk_Roles) AS Splunk_Roles last(*) as * BY Splunk_Instance appName title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|")\
| table Splunk_Instance Splunk_Roles title appName author description TIME_PREFIX TIME_FORMAT MAX_TIMESTAMP_LOOKAHEAD DATETIME_CONFIG SHOULD_LINEMERGE LINE_BREAKER TRUNCATE BREAK_ONLY_BEFORE BREAK_ONLY_BEFORE_DATE MUST_BREAK_AFTER KV_MODE INDEXED_EXTRACTIONS EVENT_BREAKER_ENABLE EVENT_BREAKER ANNOTATE_PUNCT LEARN_SOURCETYPE LEARN_MODEL MAX_EVENTS maxDist \
| outputlookup splunk_sh_configs_conf_props_rest_csv_lookup createinapp=true create_empty=true override_if_empty=false\
| stats count

[splunk_all_rest_server_info_csv_lookup_gen]
description = 
action.email.useNSSubject = 1
alert.track = 0
allow_skew = 100%
cron_schedule = 0 4 * * *
dispatch.earliest_time = -1s
dispatch.latest_time = now
dispatchAs = user
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.statistics.wrap = 0
display.visualizations.show = 0
display.visualizations.type = mapping
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
search = | rest /servicesNS/-/-/server/info splunk_server_group="*" timeout=0 \
| rename eai:acl.* AS *, field.* AS * , splunk_server AS Splunk_Instance \
| fields Splunk_Instance search_group serverName host host_fqdn host_resolved server_roles mode guid version build os_name os_name_extended cpu_arch os_version os_build startup_time cluster_label kvStoreStatus numberOfCores numberOfVirtualCores physicalMemoryMB rtsearch_enabled master_uri master_guid licenseState isForwarding isTrial license_labels \
| join Splunk_Instance \
    [| rest /servicesNS/-/-/admin/system-info splunk_server_group="*" timeout=0 \
    | rename "eai:acl.*" AS "*", "eai:*" AS "*" , transparent_hugepages.* AS transparent_hugepages_* , ulimits.* AS ulimits_* , splunk_server AS Splunk_Instance \
    | fields - "perms.*", "can_*", id, published, removable, modifiable, updated \
    | fields Splunk_Instance transparent_hugepages_defrag transparent_hugepages_effective_state transparent_hugepages_enabled ulimits_core_file_size ulimits_cpu_time ulimits_data_file_size ulimits_data_segment_size ulimits_nice ulimits_open_files ulimits_resident_memory_size ulimits_stack_size ulimits_user_processes ulimits_virtual_address_space_size] \
| lookup dmc_assets host AS Splunk_Instance OUTPUT search_group \
| rex field=search_group max_match=0 "dmc_customgroup_(?<Splunk_Custom_Roles>.*?)$" \
| stats values(server_roles) AS Splunk_Roles values(Splunk_Custom_Roles) AS Splunk_Custom_Roles last(*) as * by Splunk_Instance \
| eval Splunk_Roles = mvfilter ( ! match (Splunk_Roles, "kv_store|deployment_server|search_peer|cluster_search_head|cluster_slave|license_master") ) \
| eval Splunk_Roles=mvappend(Splunk_Roles, Splunk_Custom_Roles) , Splunk_Roles=mvjoin(mvdedup(mvsort(Splunk_Roles)),"|") \
| table Splunk_Instance Splunk_Roles serverName host host_fqdn host_resolved mode guid version build os_name os_name_extended cpu_arch os_version os_build startup_time cluster_label kvStoreStatus numberOfCores numberOfVirtualCores physicalMemoryMB rtsearch_enabled master_uri master_guid licenseState isForwarding isTrial license_labels transparent_hugepages_defrag transparent_hugepages_effective_state transparent_hugepages_enabled ulimits_core_file_size ulimits_cpu_time ulimits_data_file_size ulimits_data_segment_size ulimits_nice ulimits_open_files ulimits_resident_memory_size ulimits_stack_size ulimits_user_processes ulimits_virtual_address_space_size \
| outputlookup splunk_all_rest_server_info_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_inputs_all_csv_lookup_gen]
description = 
action.email.useNSSubject = 1
alert.track = 0
allow_skew = 100%
enableSched = 1
cron_schedule = 15 4 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","sourcetype","app","app_name","bytes","Splunk_Roles"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.statistics.wrap = 0
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
search = | rest /servicesNS/-/-/data/inputs/all splunk_server_group="*" \
| rename "eai:acl.*" as "*", "eai:*" as "*" , splunk_server AS Splunk_Instance \
| fields Splunk_Instance disabled app sharing author type title description source sourcetype index location acceleration whitelist blacklist crcSalt interval \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)` \
| where type!="ssl" \
| eval index=if(index="default", "main", index) \
| stats values(Splunk_Roles) as Splunk_Roles last(*) as * by Splunk_Instance app title \
| table Splunk_Instance Splunk_Roles app title disabled sharing author type description source sourcetype index location acceleration whitelist blacklist crcSalt interval \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| outputlookup splunk_sh_rest_data_inputs_all_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_admin_lookup_table_files_kv_store_lookup_gen]
alert.track = 0
allow_skew = 100%
cron_schedule = 15 0 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.splunk_monitoring_console.heatmap.showLegend = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showTooltip = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showXAxis = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showYAxis = 1
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/admin/lookup-table-files splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as * , eai:* as * \
| rename appName as app, title as Lookup_File, splunk_server as Splunk_Instance, data as Lookup_File_Path \
| eval author = if(author="nobody", "system", author) \
| fields Lookup_File author disabled app sharing Splunk_Instance updated Lookup_File_Path \
| `get_instance_info_simple(Splunk_Instance)` \
| stats last(*) as * values(Splunk_Roles) as Splunk_Roles values(author) as author by Splunk_Instance app sharing Lookup_File \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles app sharing author disabled updated Lookup_File Lookup_File_Path\
| outputlookup splunk_sh_rest_admin_lookup_table_files_kv_store_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_admin_transforms_lookup_csv_lookup_gen]
alert.track = 0
allow_skew = 100%
cron_schedule = 30 0 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.splunk_monitoring_console.heatmap.showLegend = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showTooltip = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showXAxis = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showYAxis = 1
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/admin/transforms-lookup splunk_server_group=dmc_group_search_head timeout=0 \
| rename eai:acl.* as * , eai:* as * \
| rename appName as app, title as Lookup, splunk_server as Splunk_Instance, data as Lookup_File_Path, filename as Filename fields_list as Fields_List type as Type match_type as Match_Type replicate as Replicate allow_caching as Allow_Caching collection as Collection filter as Filter index_fields_list as Index_Fields_List min_matches as Min_Matches max_matches as Max_Matches \
| fields Splunk_Instance app sharing Lookup Filename Type Collection updated disabled author Match_Type Replicate Allow_Caching Filter Index_Fields_List Min_Matches Max_Matches Fields_List \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)` \
| stats values(Splunk_Roles) AS Splunk_Roles last(*) as * by Splunk_Instance app Lookup sharing author \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| table Splunk_Instance Splunk_Roles app Lookup author sharing Filename Type Collection updated disabled Match_Type Replicate Allow_Caching Filter Index_Fields_List Min_Matches Max_Matches Fields_List \
| outputlookup splunk_sh_rest_admin_transforms_lookup_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_rest_data_indexes_csv_lookup_gen]
action.email.useNSSubject = 1
alert.track = 0
allow_skew = 100%
cron_schedule = 15 3 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","app","app_name","bytes"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.statistics.wrap = 0
display.visualizations.custom.splunk_monitoring_console.heatmap.showLegend = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showTooltip = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showXAxis = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showYAxis = 1
display.visualizations.show = 0
display.visualizations.type = custom
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
search = | rest /services/data/indexes-extended splunk_server_group=dmc_group_indexer timeout=0 \
| rename "eai:acl.*" as "*", "eai:*" as "*" , splunk_server AS Splunk_Instance \
| fields Splunk_Instance title app coldPath coldPath.maxDataSizeMB coldToFrozenDir coldToFrozenScript currentDBSizeMB datamodel_summary_size datatype frozenTimePeriodInSecs homePath homePath.maxDataSizeMB isInternal maxDataSize maxGlobalDataSizeMB maxGlobalRawDataSizeMB maxHotBuckets maxHotIdleSecs maxHotSpanSecs maxTime maxTotalDataSizeMB maxWarmDBCount minHotIdleSecsBeforeForceRoll minTime quarantineFutureSecs quarantinePastSecs repFactor rotatePeriodInSecs thawedPath throttleCheckPeriod totalEventCount total_bucket_count total_capacity total_event_count total_raw_size total_size tstatsHomePath \
| eval author = if(author="nobody", "system", author) \
| `get_instance_info_simple(Splunk_Instance)` \
| stats sum(currentDBSizeMB) as currentDBSizeMB last(maxTotalDataSizeMB) as maxTotalDataSizeMB last(frozenTimePeriodInSecs) as frozenTimePeriodInSecs last(quarantineFutureSecs) as quarantineFutureSecs last(quarantinePastSecs) as quarantinePastSecs avg(totalEventCount) as "Average Event Count" min(minTime) as minTime max(maxTime) as maxTime last(maxHotSpanSecs) as maxHotSpanSecs values(Splunk_Roles) AS Splunk_Roles last(*) AS * by Splunk_Instance title \
| eval Splunk_Roles = mvjoin(Splunk_Roles, "|") \
| eval Retention_Days = round(frozenTimePeriodInSecs/24/60/60), Retention_Month = round(frozenTimePeriodInSecs/24/60/60/30), Retention_Years = round(frozenTimePeriodInSecs/24/60/60/365, 2), Hot_Warm_Bucket_Retention_Days = round(maxHotSpanSecs/24/60/60) \
| eval "Quarantine Past Days" = round(quarantinePastSecs/24/60/60), "Quarantine Future Days" = round(quarantineFutureSecs/24/60/60) \
| eval "Index Size (GB)" = round(currentDBSizeMB / 1024, 2), "Index Size (TB)" = round(currentDBSizeMB / 1024 / 1024, 2) , "Max Total Index Size (TB)" = round(maxTotalDataSizeMB / 1024 / 1024) , "Max Total Index Size (PB)" = round(maxTotalDataSizeMB / 1024 / 1024 / 1024) \
| eval "Earliest Event"=strftime(strptime(minTime,"%Y-%m-%dT%H:%M:%S"),"%B %e, %Y"), "Latest Event"=strftime(strptime(maxTime,"%Y-%m-%dT%H:%M:%S"),"%B %e, %Y") \
| eval Time_Diff_Years = round((strptime(maxTime,"%Y-%m-%dT%H:%M:%S") - strptime(minTime,"%Y-%m-%dT%H:%M:%S")) / 60 / 60 / 24 / 365, 2), Time_Diff_Month = round((strptime(maxTime,"%Y-%m-%dT%H:%M:%S") - strptime(minTime,"%Y-%m-%dT%H:%M:%S")) / 60 / 60 / 24 / 30, 2), Time_Diff_Days = round((strptime(maxTime,"%Y-%m-%dT%H:%M:%S") - strptime(minTime,"%Y-%m-%dT%H:%M:%S")) / 60 / 60 / 24) \
| eval Days_Diff_From_Retention = Time_Diff_Days - Retention_Days \
| rename title as Index \
| table Splunk_Instance Splunk_Roles Index currentDBSizeMB "Index Size (GB)" "Index Size (TB)" Retention_Days Retention_Month Retention_Years "Earliest Event" "Latest Event" Time_Diff_Years Time_Diff_Month Time_Diff_Days Days_Diff_From_Retention "Average Event Count" app coldPath coldPath.maxDataSizeMB coldToFrozenDir coldToFrozenScript datamodel_summary_size datatype homePath homePath.maxDataSizeMB isInternal maxDataSize maxGlobalDataSizeMB maxGlobalRawDataSizeMB maxHotBuckets maxHotIdleSecs maxWarmDBCount minHotIdleSecsBeforeForceRoll repFactor rotatePeriodInSecs thawedPath throttleCheckPeriod total_bucket_count total_capacity total_event_count total_raw_size total_size tstatsHomePath \
| outputlookup splunk_sh_rest_data_indexes_csv_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count

[splunk_sh_identities_csv_lookup_gen]
alert.track = 0
allow_skew = 100%
cron_schedule = 30 3 * * *
dispatch.earliest_time = -1s@s
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.splunk_monitoring_console.heatmap.showLegend = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showTooltip = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showXAxis = 1
display.visualizations.custom.splunk_monitoring_console.heatmap.showYAxis = 1
enableSched = 1
request.ui_dispatch_app = splunk_global_monitoring_console
request.ui_dispatch_view = search
run_on_startup = 1
schedule_window = auto
search = | rest /servicesNS/-/-/authentication/users splunk_server_group="*" timeout=0 \
| fields splunk_server title email realname \
| rename title AS identity , realname AS full_name splunk_server as Splunk_Instance \
| append \
    [| inputlookup splunk_sh_identities_lookup \
    | fields identity prefix nick first last full_name suffix email phone phone2 managedBy priority bunit category watchlist startDate endDate work_city work_region work_country work_lat work_long Title LOB Department Emp_Type Emp_Status Cost_Center Location_Code Floor_Number Splunk_Roles Splunk_Instance Contractor_Expiration ] \
| `get_instance_info_simple(Splunk_Instance)` \
| lookup update=true splunk_sh_identities_lookup identity as identity OUTPUT full_name AS lookup_full_name email AS lookup_email prefix nick first last suffix phone phone2 managedBy priority bunit category watchlist startDate endDate work_city work_region work_country work_lat work_long Title LOB Department Emp_Type Emp_Status Cost_Center Location_Code Floor_Number Contractor_Expiration \
| eval email = if ( isnull(email) OR email="", lookup_email, email ) \
| eval identity = lower ( trim ( identity ) ) , email = lower ( trim ( email ) ) \
| append \
    [| makeresults \
    | eval identity="splunk-system-user" , full_name="Splunk System User" \
    | fields identity full_name] \
| stats values(Splunk_Instance) AS Splunk_Instance values(Splunk_Roles) AS Splunk_Roles last(*) as * by identity \
| eval Splunk_Roles=mvjoin(mvdedup(mvsort(Splunk_Roles)),"|") , Splunk_Instance=mvjoin(mvdedup(mvsort(Splunk_Instance)),"|") \
| table identity prefix nick first last full_name suffix email phone phone2 managedBy priority bunit category watchlist startDate endDate work_city work_region work_country work_lat work_long Title LOB Department Emp_Type Emp_Status Cost_Center Location_Code Floor_Number Splunk_Roles Splunk_Instance Contractor_Expiration \
| outputlookup splunk_sh_identities_lookup createinapp=true create_empty=true override_if_empty=false \
| stats count
