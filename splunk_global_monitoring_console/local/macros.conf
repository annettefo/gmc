
[gmc_convert_runtime(1)]
description = gmc_convert_runtime
args = runtime
definition = eval $runtime$=case(round($runtime$ / (3600*24) - 0.5) > 0, round($runtime$ / (3600*24)- 0.5)."d".round(($runtime$ % (3600*24)) / 3600 - 0.5)."h ".round(($runtime$ % 3600) / 60 - 0.5)."min ".round($runtime$ % 60, 2)."s",round(($runtime$ % (3600*24)) / 3600 - 0.5) > 0,round(($runtime$ % (3600*24)) / 3600 - 0.5)."h ".round(($runtime$ % 3600) / 60 - 0.5)."min ".round($runtime$ % 60, 2)."s",round(($runtime$ % 3600) / 60 - 0.5) > 0, round(($runtime$ % 3600) / 60 - 0.5)."min".round($runtime$ % 60, 2)."s", 1 = 1, round($runtime$ % 60, 2)."s")
iseval = 0

# Saved Searches
[get_saved_searches_info(1)]
description = Retrieves information about Scheduled Searches from the splunk_sh_saved_searches_rest_kv_store_lookup KV Store Lookup Table
args = Savedsearch_Name
definition = lookup splunk_sh_saved_searches_rest_kv_store_lookup savedsearch_name AS $Savedsearch_Name$ OUTPUTNEW description savedsearch_type is_scheduled cron_schedule auto_summarize dispatch_earliest_time dispatch_latest_time schedule_priority max_concurrent schedule_window allow_skew realtime_schedule run_n_times run_on_startup Lookup_Reference Datamodel_Reference search AS Search\
\
| eval description=mvdedup(description), savedsearch_type=mvdedup(savedsearch_type), is_scheduled=mvdedup(is_scheduled), cron_schedule=mvdedup(cron_schedule), auto_summarize=mvdedup(auto_summarize), dispatch_earliest_time=mvdedup(dispatch_earliest_time), dispatch_latest_time=mvdedup(dispatch_latest_time), schedule_priority=mvdedup(schedule_priority), max_concurrent=mvdedup(max_concurrent), schedule_window=mvdedup(schedule_window), allow_skew=mvdedup(allow_skew), realtime_schedule=mvdedup(realtime_schedule), run_n_times=mvdedup(run_n_times) , run_on_startup=mvdedup(run_on_startup), Lookup_Reference=mvdedup(Lookup_Reference), Datamodel_Reference=mvdedup(Datamodel_Reference) , search=mvdedup(search)
iseval = 0

[get_saved_searches_info(2)]
description = get_saved_searches_info
args = App,Savedsearch_Name
definition = lookup splunk_sh_saved_searches_rest_kv_store_lookup app AS "$App$" savedsearch_name AS $Savedsearch_Name$ OUTPUTNEW description savedsearch_type is_scheduled cron_schedule auto_summarize dispatch_earliest_time dispatch_latest_time schedule_priority max_concurrent schedule_window allow_skew realtime_schedule run_n_times run_on_startup Lookup_Reference Datamodel_Reference search AS Search\
\
| eval description=mvdedup(description), savedsearch_type=mvdedup(savedsearch_type), is_scheduled=mvdedup(is_scheduled), cron_schedule=mvdedup(cron_schedule), auto_summarize=mvdedup(auto_summarize), dispatch_earliest_time=mvdedup(dispatch_earliest_time), dispatch_latest_time=mvdedup(dispatch_latest_time), schedule_priority=mvdedup(schedule_priority), max_concurrent=mvdedup(max_concurrent), schedule_window=mvdedup(schedule_window), allow_skew=mvdedup(allow_skew), realtime_schedule=mvdedup(realtime_schedule), run_n_times=mvdedup(run_n_times) , run_on_startup=mvdedup(run_on_startup), Lookup_Reference=mvdedup(Lookup_Reference), Datamodel_Reference=mvdedup(Datamodel_Reference) , search=mvdedup(search)
iseval = 0

[get_saved_searches_info(3)]
description = get_saved_searches_info
args = Splunk_Instance,App,Savedsearch_Name
definition = lookup splunk_sh_saved_searches_rest_kv_store_lookup Splunk_Instance AS $Splunk_Instance$ app AS $App$ savedsearch_name AS "$Savedsearch_Name$" OUTPUTNEW description savedsearch_type is_scheduled cron_schedule auto_summarize dispatch_earliest_time dispatch_latest_time schedule_priority max_concurrent schedule_window allow_skew realtime_schedule run_n_times run_on_startup Lookup_Reference Datamodel_Reference search AS Search\
\
| eval description=mvdedup(description), savedsearch_type=mvdedup(savedsearch_type), is_scheduled=mvdedup(is_scheduled), cron_schedule=mvdedup(cron_schedule), auto_summarize=mvdedup(auto_summarize), dispatch_earliest_time=mvdedup(dispatch_earliest_time), dispatch_latest_time=mvdedup(dispatch_latest_time), schedule_priority=mvdedup(schedule_priority), max_concurrent=mvdedup(max_concurrent), schedule_window=mvdedup(schedule_window), allow_skew=mvdedup(allow_skew), realtime_schedule=mvdedup(realtime_schedule), run_n_times=mvdedup(run_n_times) , run_on_startup=mvdedup(run_on_startup), Lookup_Reference=mvdedup(Lookup_Reference), Datamodel_Reference=mvdedup(Datamodel_Reference) , search=mvdedup(search)
iseval = 0

[get_saved_searches_usage(3)]
description = get_saved_searches_usage
args = Splunk_Roles,app,Savedsearch_Name
definition = lookup splunk_sh_index_internal_scheduler_jobs_kv_store_lookup Splunk_Instance AS $Splunk_Instance$ App AS $app$ Savedsearch_Name AS $Savedsearch_Name$ OUTPUTNEW User Scheduled_Time Priority Dispatch_Time Window_Time Latest_Run_Time Run_Time Result_Count \
| makemv delim="|" Splunk_Roles\
\
| eval Days_Latest_Access = round((now() - Latest_Run_Time) / 86400 , 0) \
| eval Days_Latest_Access = case( Days_Latest_Access = "0", "00", Days_Latest_Access = "1", "01", Days_Latest_Access = "2", "02", Days_Latest_Access = "3", "03", Days_Latest_Access = "4", "04", Days_Latest_Access = "5", "05", Days_Latest_Access = "6", "06", Days_Latest_Access = "7", "07", Days_Latest_Access = "8", "08", Days_Latest_Access = "9", "09", true(), Days_Latest_Access ) \
\
| eval Scheduled_Time = strftime(Scheduled_Time,"%m/%d/%Y %H:%M:%S") , Dispatch_Time = strftime(Dispatch_Time,"%m/%d/%Y %H:%M:%S") , Latest_Run_Time = strftime(Latest_Run_Time,"%m/%d/%Y %H:%M:%S")\
\
| fillnull value=999999 Days_Latest_Access
iseval = 0

# Dashboards
[get_dashboards_info(2)]
description = get_dashboards_info
args = App,Dashboard_Name
definition = lookup splunk_sh_rest_data_ui_dashboards_lookup app AS $App$ title AS $Dashboard_Name$ OUTPUTNEW label description Report_Reference Dashboard_Reference Lookup_Reference Datamodel_Reference Search BaseSearch
iseval = 0

[get_dashboards_usage(3)]
description = get_dashboards_usage
args = Splunk_Instance,app,Dashboard_Name
definition = lookup splunk_sh_web_access_kv_store_lookup Splunk_Instance AS $Splunk_Instance$ App AS $app$ Dashboard_Name AS $Dashboard_Name$ OUTPUTNEW Earliest_Access_Updated Latest_Access_Updated min_spent max_spent avg_spent\
\
| eval Days_Latest_Dashboard_Access = round((now() - Latest_Access_Updated) / 86400 , 0) \
| eval Days_Latest_Dashboard_Access = case( Days_Latest_Dashboard_Access = "0", "00", Days_Latest_Dashboard_Access = "1", "01", Days_Latest_Dashboard_Access = "2", "02", Days_Latest_Dashboard_Access = "3", "03", Days_Latest_Dashboard_Access = "4", "04", Days_Latest_Dashboard_Access = "5", "05", Days_Latest_Dashboard_Access = "6", "06", Days_Latest_Dashboard_Access = "7", "07", Days_Latest_Dashboard_Access = "8", "08", Days_Latest_Dashboard_Access = "9", "09", true(), Days_Latest_Dashboard_Access ) \
\
| eval Earliest_Access_Updated = strftime(Earliest_Access_Updated,"%m/%d/%Y %H:%M:%S") , Latest_Access_Updated = strftime(Latest_Access_Updated,"%m/%d/%Y %H:%M:%S")\
\
| fillnull value=999999 Days_Latest_Dashboard_Access\

iseval = 0
# Identities
[get_identity_info(1)]
description = get_identity_info
args = identity
definition = lookup update=true splunk_sh_identities_lookup identity as $identity$ OUTPUTNEW first last full_name email managedBy bunit startDate endDate work_city work_region work_country work_lat work_long Title LOB Department Emp_Type Emp_Status Cost_Center Location_Code Floor_Number Contractor_Expiration
iseval = 0

[get_identity_usage(1)]
description = get_identity_usage
args = username
definition = eval $username$ = upper($username$)\
| lookup splunk_sh_index_audit_user_login_kv_store_lookup User AS $username$ OUTPUTNEW Earliest_Login_Updated AS User_Earliest_Login_Updated Latest_Login_Updated AS User_Latest_Login_Updated Splunk_Roles AS User_Splunk_Roles Login_Source AS User_Login_Source\
\
| makemv delim="|" Splunk_Roles\
\
| eval User_Earliest_Login_Updated = strftime(User_Earliest_Login_Updated,"%m/%d/%Y %H:%M:%S") , User_Latest_Login_Updated = strftime(User_Latest_Login_Updated,"%m/%d/%Y %H:%M:%S")\
\
| fillnull value="Undefined" User_Earliest_Login_Updated User_Latest_Login_Updated User_Splunk_Roles User_Login_Source
iseval = 0

[get_field_desc(1)]
description = get_field_desc
args = Field_Name
definition = lookup splunk_fields_lookup Field_Name AS $Field_Name$ OUTPUTNEW Field_Description
iseval = 0

[get_lookup_reference(1)]
description = get_lookup_reference
args = field
definition = rex field=$field$ max_match=0 "\|\s*lookup\s*(?<Lookup_Reference1>\w+)" \
| rex field=$field$ max_match=0 "\|\s*(in|out)putlookup\s*(append=\w+\s*)?(?<Lookup_Reference2>\w+)" \
| rex field=$field$ max_match=0 "\|\s*from\s+inputlookup:\"?(?<Lookup_Reference3>\w+)" \
| eval Lookup_Reference=mvsort(mvdedup(mvappend(lower(Lookup_Reference1), lower(Lookup_Reference2), lower(Lookup_Reference3))))\
\
| fields - Lookup_Reference1 Lookup_Reference2 Lookup_Reference3\
\
| eval Lookup_Reference = mvfilter ( ! match (Lookup_Reference, "event_time_field|output_format|createinapp|update|local|append|create_empty|key_field|override_if_empty|start|max|where") )\
\
| fillnull value="no-reference" Lookup_Reference
iseval = 0

[normalize_search_id(1)]
description = normalize_search_id
args = search_id
definition = rex field=$search_id$ "_(?<search_id_normalized1>\d+[._]\d+)_" \
| rex field=$search_id$ "(?<search_id_normalized2>\d+[._]\d+$)" \
| rex field=$search_id$ "(?<search_id_normalized3>^\d+[._]\d+)" \
| eval search_id_normalized = if(isnull(search_id_normalized1), search_id_normalized2, search_id_normalized1) \
| eval search_id_normalized = if(isnull(search_id_normalized), search_id_normalized3, search_id_normalized) \
| eval search_id_normalized = if(isnull(search_id_normalized), search_id, search_id_normalized)\
| rex field=search_id_normalized mode=sed "s/\./_/g"\
| rex field=search_id_normalized mode=sed "s/^\w+;\w+;//g"\
| fields - search_id_normalized1, search_id_normalized2, search_id_normalized3
iseval = 0

[gmc_time_format(1)]
description = gmc_time_format
args = time
definition = $time$ = strftime($time$, "%m/%d/%Y %H:%M:%S")
iseval = 0

[rest_time_format(1)]
description = rest_time_format
args = time
definition = rex field=$time$ mode=sed "s/^1970.*/2003-10-01T00:00:00+00:00/g"\
| eval $time$ = strftime(strptime($time$,"%Y-%m-%dT%H:%M:%S"),"%m/%d/%Y %H:%M:%S")
iseval = 0

[rename_common_fields]
description = rename_common_fields
definition = rename host as "Splunk Instance" , search_id as "Search ID" , search_id_normalized as "Normalized Search ID" , user as User , search_type as "Search Type" , savedsearch_name as "Savedsearch Name" , 'total_run_time' as Runtime, total_run_time as Runtime_Sec , info as Info
iseval = 0

[get_dm_field(2)]
description = get_dm_field
args = dataset,field
definition = tstats SUMMARIESONLY=TRUE ALLOW_OLD_SUMMARIES=FALSE \
    count\
    FROM DATAMODEL=GMC\
    WHERE nodename=Search_Activity.$dataset$\
    BY Search_Activity.$dataset$.$field$\
| `drop_dm_object_name(Search_Activity.$dataset$)`\
| table $field$ count
iseval = 0

[get_provenance_fields(1)]
description = get_provenance_fields
args = provenance
definition = rex field=$provenance$ "(?<Provenance_Type>.*?):(?<Provenance_KO_Type>.*?):(?<Provenance_KO>.*?)$"\
| eval provenance_tmp=if(isnull(Provenance_Type), provenance, null())\
| rex field=provenance_tmp "(?<Provenance_Type>.*?):(?<Provenance_KO_Type>.*?)$"\
| eval provenance_tmp=if(isnull(Provenance_Type), provenance, null())\
| rex field=provenance_tmp "(?<Provenance_Type>.*?)$"\
| eval Dashboard_Name = if(Provenance_KO_Type="Dashboard", Provenance_KO, null() )\
| fields - provenance_tmp
iseval = 0

[gmc_drop_dm_object_name(1)]
description = gmc_drop_dm_object_name
args = object
definition = rename "$object$.*" as *
iseval = 0

[cron_schedule(1)]
description = cron_schedule
args = cron_schedule
definition = rex field=$cron_schedule$ "(?<Minute>^.*?)\\s(?<Hour>.*?)\\s(?<Day_of_Month>.*?)\\s(?<Month>.*?)\\s(?<Day_of_Week>.*?)$" \
| eval \
    Minute = case ( \
    (Minute == "*"),"Any", \
    true(), Minute ), \
    Hour = if ( match(Hour,"^\\*"),"Any",Hour ),\
    Day_of_Week = case ( \
    (Day_of_Week == 0 OR Day_of_Week == 7),"Sunday", \
    (Day_of_Week == 1), "Monday",\
    (Day_of_Week == 2), "Tuesday",\
    (Day_of_Week == 3), "Wednesday",\
    (Day_of_Week == 4), "Thursday",\
    (Day_of_Week == 5), "Friday",\
    (Day_of_Week == 6), "Saturday", \
    (Day_of_Week == "*"),"Any", \
    true(), Day_of_Week),\
    Day_of_Month = if ( match(Day_of_Month,"^\\*"), "Any", Day_of_Month), \
    Month = case ( \
    (Month == 1),"January",\
    (Month == 2),"February",\
    (Month == 3),"March",\
    (Month == 4),"April",\
    (Month == 5),"May",\
    (Month == 6),"June",\
    (Month == 7),"July",\
    (Month == 8),"August",\
    (Month == 9),"September",\
    (Month == 10),"October",\
    (Month == 11),"November",\
    (Month == 12),"December", \
    (Month == "*"),"Any", \
    true(), Month ), \
    Cron_Schedule_translated=((((((((("Minute: " . Minute) . " | Hour: ") . Hour) . " | Day_of_Month: ") . Day_of_Month) . " | Month: ") . Month) . " | Day_of_Week: ") . Day_of_Week)\
| fields - Minute, Hour, Day_of_Month, Month, Day_of_Week
iseval = 0

[from_introspection]
description = from_introspection
definition = from datamodel:GMC.Introspection_Search_Usage \
| `get_splunk_env(host)` \
| fields _time Splunk_Roles host search_id search_head app user acceleration_id delta_scan_count total_run_time fd_used mem_used normalized_pct_cpu page_faults pct_cpu pct_memory pid ppid provenance read_mb savedsearch_name scan_count search_type status t_count written_mb mode
iseval = 0

[from_audit]
description = from_audit
definition = from datamodel:GMC.Audit_Search \
| `get_splunk_env(host)` \
| fields _time Splunk_Roles host available_count considered_events datamodel decompressed_slices event_count dispatch_time exec_time info result_count roles savedsearch_name scan_count search search_et search_id search_lt search_startup_time search_type searched_buckets total_run_time total_slices user
iseval = 0

[from_internal]
description = from_internal
definition = from datamodel:GMC.Internal_Scheduler \
| `get_splunk_env(host)` \
| fields _time Splunk_Roles host app search_id_normalized concurrency_category concurrency_context concurrency_limit dispatch_time priority reason result_count total_run_time savedsearch_id savedsearch_name scheduled_time search_id search_type skipped_count info user window_time alert_actions Total_Executions Skipped_Executions
iseval = 0

[skip_ratio(1)]
description = skip_ratio
args = Splunk_Roles
definition = tstats SUMMARIESONLY=TRUE ALLOW_OLD_SUMMARIES=TRUE \
    sum(Search_Activity.Internal_Scheduler.is_Internal_Total_Executions) as Total_Executions\
    sum(Search_Activity.Internal_Scheduler.is_Internal_Skipped_Executions) as Skipped_Executions\
    FROM DATAMODEL=GMC\
    WHERE nodename=Search_Activity.Internal_Scheduler\
    index=_internal\
    AND Search_Activity.Internal_Scheduler.savedsearch_name2 = "*"\
    AND Search_Activity.Internal_Scheduler.app2 = "*"\
    AND Search_Activity.Internal_Scheduler.search_type2 = "*" \
    AND Search_Activity.Internal_Scheduler.info2 = "*"\
    AND Search_Activity.Internal_Scheduler.user2 = "*"\
    AND host = "*"\
    Search_Activity.Internal_Scheduler.info2 IN ( "completed" , "skipped")\
    BY host \
| `drop_dm_object_name(Search_Activity.Internal_Scheduler)` \
| rename info2 AS info , host AS Instance \
| `get_splunk_env(Instance)` \
| eval Skip_Ratio = ( (Skipped_Executions / Total_Executions) * 100), Skip_Ratio = ( round(Skip_Ratio, 2) . "%") \
| table Splunk_Roles Instance Total_Executions Skipped_Executions Skip_Ratio \
| search Splunk_Roles = "$Splunk_Roles$"
iseval = 0

[get_instance_info(1)]
description = get_instance_info
args = Splunk_Instance
definition = lookup splunk_all_rest_server_info_csv_lookup Splunk_Instance AS $Splunk_Instance$ OUTPUTNEW Splunk_Roles serverName host host_fqdn host_resolved mode guid version build os_name os_name_extended cpu_arch os_version os_build startup_time cluster_label kvStoreStatus numberOfCores numberOfVirtualCores physicalMemoryMB rtsearch_enabled master_uri master_guid licenseState isForwarding isTrial license_labels transparent_hugepages_defrag transparent_hugepages_effective_state transparent_hugepages_enabled ulimits_core_file_size ulimits_cpu_time ulimits_data_file_size ulimits_data_segment_size ulimits_nice ulimits_open_files ulimits_resident_memory_size ulimits_stack_size ulimits_user_processes ulimits_virtual_address_space_size\
\
| makemv delim="|" Splunk_Roles\
\

iseval = 0

[get_instance_info_simple(1)]
description = get_instance_info_simple
args = Splunk_Instance
definition = lookup splunk_all_rest_server_info_csv_lookup Splunk_Instance AS $Splunk_Instance$ OUTPUTNEW Splunk_Roles | makemv delim="|" Splunk_Roles
iseval = 0

[identities]
description = identities
definition = inputlookup splunk_sh_identities_lookup \
| makemv delim="|" identity_Splunk_Roles \
| makemv delim="|" identity_Splunk_Instance \
| table identity prefix nick first last full_name suffix email phone phone2 managedBy priority bunit category watchlist startDate endDate work_city work_region work_country work_lat work_long Title LOB Department Emp_Type Emp_Status Cost_Center Location_Code Floor_Number Contractor_Expiration Splunk_Roles Splunk_Instance
iseval = 0

[get_fields_list]
definition = rename "eai:acl.*" as "*" , "eai:*" AS "*"\
| fields - "perms.*", "can_*", id, published, removable, modifiable, updated \
| fieldsummary \
| rename field AS Fields_List \
| fields Fields_List \
| where Fields_List!="Fields_List" \
| mvcombine Fields_List \
| eval Fields_List=mvjoin(Fields_List," ")
iseval = 0

[get_search_concurrency(2)]
args = Splunk_Instance,title
definition = eval title="$title$"\
| lookup splunk_sh_admin_search_concurrency_settings_handler_csv_lookup Splunk_Instance AS $Splunk_Instance$ title OUTPUTNEW Splunk_Roles max_searches_perc auto_summary_perc base_max_searches max_rt_search_multiplier max_searches_per_cpu max_auto_summary_searches max_hist_scheduled_searches max_hist_searches max_rt_scheduled_searches max_rt_searches\
| fields - title\
| makemv delim="|" Splunk_Roles
iseval = 0

[get_dashboards_info(1)]
args = Dashboard_Name
definition = lookup splunk_sh_rest_data_ui_dashboards_lookup title AS $Dashboard_Name$ OUTPUTNEW label description Report_Reference Dashboard_Reference Lookup_Reference Datamodel_Reference Search BaseSearch
iseval = 0

[get_dashboards_info(3)]
args = Splunk_Instance,App,Dashboard_Name
definition = lookup splunk_sh_rest_data_ui_dashboards_lookup Splunk_Instance AS $Splunk_Instance$ app AS $App$ title AS $Dashboard_Name$ OUTPUTNEW label description Report_Reference Dashboard_Reference Lookup_Reference Datamodel_Reference Search BaseSearch
iseval = 0
